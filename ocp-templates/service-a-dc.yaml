apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: service-a
  name: service-a
spec:
  replicas: 1
  selector:
    app: service-a
    deploymentconfig: service-a
  strategy:
    resources: {}
    type: Rolling
  template:
    metadata:
      labels:
        app: service-a
        deploymentconfig: service-a
    spec:
      containers:
        - name: service-a
          env:
            - name: server.port
              value: "8080"
            - name: serviceid
              value: "Service-A"
          image: demoservice:latest
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /actuator/health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1     
          ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 8778
            protocol: TCP
          - containerPort: 9779
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
        - service-a
      from:
        kind: ImageStreamTag
        name: demoservice:latest
    type: ImageChange